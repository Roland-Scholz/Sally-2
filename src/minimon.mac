;
;
;
MINIMON:
	LD	A,1
	OUT	(BANKSW),A	;SWITCH TO ALL-RAM CONFIGURATION
	CALL	CONINIT		;INITIALIZE SERIAL CONSOLE PORT
	CALL	PNEXT
	DEFB	CR,LF
IF SALLYBUILD
	DEFB	"Sally2"
ELSE
	DEFB	'ATRMON'
ENDIF
	DEFB	NULL
PROMPT:	LD	HL,PROMPT
	PUSH	HL		;PUT RETURN ADDRESS ON STACK
	CALL	PNEXT
	DEFB	CR,LF,'# ',NULL
	CALL	ECHO
	CP	' '
	RET	C		;IGNORE NON-PRINTABLE CHATACTERS

	LD	C,A		;SAVE COMMAND CHARACTER IN C
	XOR	A
	LD	H,A
	LD	L,A
PROM1:	ADD	HL,HL		;MULTIPLY RESULT BY 16
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	OR	L		;APPEND NEW LOW ORDER DIGIT
	LD	L,A
	CALL	ECHO		;GET A CHARACTER FROM LINE INPUT
	CP	CR
	JR	Z,PROM3		;EXIT LOOP IF RETURN TYPED
	CALL	ASCHEX		;CONVERT ASCII TO NUMERIC
	JR	NC,PROM1	;KEEP SHIFTING IF VALID HEX

PROM2:	CALL	PNEXT
	DEFB	' ?',NULL
	RET
;
PROM3:	CALL	CRLF
	LD	A,C
	CP	'G'
	JR	Z,GOTO		;DO GOTO IF 'G'
	CP	'B'
	JR	Z,BOOT		;DO BOOT LOADER IF 'B'
	CP	'M'
	JR	NZ,PROM2	;***TEMP***

;  **** This code section does not exist on production ROM ****
;	.COMMENT %
;	JR	Z,VIEW		;DO MEMORY EXAMINE/CHANGE IF 'M'
;	CP	'D'
;	JR	NZ,PROM2	;FALL INTO MEMORY DUMP IF 'D'
;
;
;
;	-- TABULAR MEMORY DUMP COMMAND --
;
;DUMP:
;	LD	C,16
;DUMP1:	PUSH	HL		;SAVE STARTING ADDRESS
;	CALL	PUT4HS		;PRINT STARTING ADDRESS IN HEX
;	LD	B,8
;DUMP2:	LD	A,(HL)		;GET A DATA BYTE @ HL
;	INC	HL
;	CALL	PUT2HS		;PRINT THE DATA IN HEX
;	DJNZ	DUMP2		;REPEAT 16 TIMES
;	POP	HL		;RESTORE STARTING ADDRESS
;	LD	B,8
;DUMP3:	LD	A,(HL)		;GET BACK DATA BYTE @ HL
;	INC	HL
;	RES	7,A
;	CP	20H
;	JR	C,DUMP4
;	CP	7FH
;	JR	C,DUMP5
;DUMP4:	LD	A,'.'		;PRINT A DOT IF DATA < 20 OR > 7F
;DUMP5:	CALL	OUTPUT		;PRINT ASCII CHARACTER IN A
;	DJNZ	DUMP3
;	CALL	CRLF
;	DEC	C
;	JR	NZ,DUMP1
;	RET
;
;
;	-- MEMORY EXAMINE COMMAND --
;
VIEW:
	CALL	PUT4HS
	LD	A,(HL)
	CALL	PUT2HS
	CALL	ECHO
	CP	CR
	JR	Z,VIEW4
	CP	'-'
	JR	Z,VIEW5
	CALL	ASCHEX
	CCF	
	RET	NC
	RLCA	
	RLCA	
	RLCA	
	RLCA	
	LD	C,A
	CALL	ECHO
	CALL	ASCHEX
	CCF	
	RET	NC
	OR	C
	LD	(HL),A
VIEW4:	INC	HL
	INC	HL
VIEW5:	DEC	HL
	CALL	CRLF
	JR	VIEW
;
;
;
;	-- JUMP TO MEMORY LOCATION COMMAND --
;
GOTO:
	JP	(HL)
;
;
;
;	-- DISK BOOT LOADER --
;
BOOT:
	LD	IX,BOOTCB
	CALL	DISKDVR		;ATTEMPT TO READ BOOT SECTOR
	LD	A,(IX+DSKSTS)
	OR	A
	CALL	Z,0080H		;EXECUTE BOOT IF NO ERRORS
	PUSH	AF
	CALL	PNEXT
	DEFB	' ERR ',NULL
	POP	AF
	JR	PUT2HX
;
;
BOOTCB:	DEFB	GETSEC
	DEFB	0
	DEFB	0
	DEFB	1
	DEFW	0080H
	DEFW	128
	DEFB	0
;
;
;
ASCHEX:
	SUB	'0'
	RET	C
	CP	10
	CCF
	RET	NC
	SUB	7
	CP	10
	RET	C
	CP	16
	CCF
	RET
;
;
;
PUT4HS:
	LD	A,H
	CALL	PUT2HX
	LD	A,L
PUT2HS:
	CALL	PUT2HX
	LD	A,' '
	JR	OUTPUT
;
;
PUT2HX:
	PUSH	AF
	RRA	
	RRA	
	RRA	
	RRA	
	CALL	PUTNIB
	POP	AF
PUTNIB:	AND	00001111B
	ADD	A,90H
	DAA
	ADC	A,40H
	DAA
	JR	OUTPUT
;
;
;
;
ECHO:
	PUSH	HL
	PUSH	BC
	CALL	CIV		;CALL CONSOLE INPUT VECTOR
	POP	BC
	POP	HL
	RES	7,A
	CP	' '
	RET	C		;DO NOT ECHO CONTROL CHARACTERS

OUTPUT:
	PUSH	HL
	PUSH	BC
	PUSH	AF
	LD	C,A
	CALL	COV		;CALL CONSOLE OUTPUT VECTOR
	POP	AF
	POP	BC
	POP	HL
	RET
;
;
;
PNEXT:
	EX	(SP),HL
PNXT1:	LD	A,(HL)
	CALL	OUTPUT
	LD	A,(HL)
	INC	HL
	OR	A
	JR	NZ,PNXT1
	EX	(SP),HL
	RET
;
;
;
CRLF:	CALL	PNEXT
	DEFB	CR,LF,NULL
	RET
;
;
;
