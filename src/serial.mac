;
;
;
;	... BAUDRATE AND TIMING CONSIDERATIONS ...
;
;	THE FOLLOWING TABLE DETAILS THE BIT TIMES FOR THE BAUDRATES
;    SUPPORTED BY THE ATR-8000 AND THE CTC PROGRAMMING PARAMETERS
;    REQUIRED TO GENERATE THEM USING THE CTC IN THE TIMER MODE.
;    (IE. BY DIVIDING DOWN THE 4MHZ CLOCK WITH 16 OR 256 PRESCALE.)
;
;	BAUD      PERIOD    MODULUS   PRESCALE
;	----      ------    -------   --------
;      19200        52 us      13        16
;	9600       104 us      26        16
;	4800       208 us      52        16
;	2400       416 us     104        16
;	1200       832 us     208        16
;	 600      1664 us      26       256
;	 300      3328 us      52       256
;	 150      6656 us     104       256
;	  75     13312 us     208       256
;
;
;
;
;	... INTERRUPT SERVICE ROUTINES FOR SERIAL CONSOLE INPUT ...
;
;	AVERAGE EXECUTION TIME = 24.55 us FOR INTERRUPT SERVICE
;				  4.75 us FOR INTERRUPT ACKNOWLEDGE
;				 ------
;				 29.30 us PER BIT
;
;
;	*** START BAGE BOUNDARY RESTRICTIONS ***
;
CONPAGE	EQU	$
;
;
RXSTART:
	PUSH	AF
	LD	A, CTC_D7_INT_EN + CTC_D6_MODE_TIM + CTC_D2_TCNEXT + CTC_D1_SW_RST + CTC_D0_CONTROL
	OUT	(CTC0),A		;RESET CTC AND PROGRAM FOR TIMER MODE
	LD	A,26			;TIME CONSTANT OF 26 - exactly 104us WHICH IS 9600 BAUD
RXBAUD	EQU	$-1			;BAUDRATE PARAM IS STORED HERE
	OUT	(CTC0),A		;PROGRAM THE TIME CONSTANT
	LD	A,LOW RXDATA
	LD	(CTCVEC),A
	LD	A,01111111B		;7 DATA BITS
RXDAT2:	LD	(RXTEMP),A	;SET DATA SHIFTER TO ALL ONES
	POP	AF
	EI
	RETI				;EXECUTION TIME = 115 CLOCK CYCLES
;
;
;
RXDATA:
	PUSH	AF
	IN	A,(ATARI)		;READ SERIAL INPUT BIT STREAM
	RLA					;SHIFT DATA BIT (=MSB) INTO CARRY
	LD	A,NULL			;LOAD A WITH PARTIAL DATA BYTE - NOTE THAT THIS VALUE RESETS AT LABEL RXDAT2
RXTEMP	EQU	$-1
	RRA					;SHIFT NEW BIT IN AND ONES OUT
	JR	C,RXDAT2

	LD	(KEYBUF),A		;STORE CHARACTER IN CIRCULAR BUFFER
RXINP	EQU	$-2
	LD	A,LOW RXSTOP
	LD	(CTCVEC),A		;ADVANCE TO STOP BIT STATE
	POP	AF
	EI
	RETI				;EXECUTION TIME = 105 CYCLES
;
;
;
RXSTOP:
	PUSH	AF
	LD	A, CTC_D7_INT_EN + CTC_D6_MODE_CNT + CTC_D2_TCNEXT + CTC_D1_SW_RST + CTC_D0_CONTROL
	OUT	(CTC0),A		;ENABLE INTERRUPT FROM START BIT
	LD	A,1				;SET TIME CONSTANT TO 1 - 6.5us
	OUT	(CTC0),A		;PROGRAM THE TIME CONSTANT
	LD	A,(RXINP)
	INC	A
	AND	00001111B		;BUMP BUFFER POINTER MODULO 16
	LD	(RXINP),A
	LD	A,LOW RXSTART
	LD	(CTCVEC),A		;SET VECTOR BACK TO START BIT CODE
	POP	AF
	EI
	RETI				;EXECUTION TIME = 132 CYCLES
;
;
;
;
;	... INTERRUPT ROUTINES FOR SERIAL DATA OUTPUT ...
;
TXSTART:
	PUSH	AF
	XOR	A
	OUT	(ATROUT),A	;SEND COMPLIMENT OF MARK AS START BIT
	LD	A,LOW TXDAT0
	LD	(CTCVEC+2),A	;SET INTERRUPT VECTOR FOR DATA BIT 0
	POP	AF
	EI
	RETI
;
;
;
;
;
TXDAT0:
	PUSH	AF
	LD	A,NULL
TXTMP0	EQU	$-1
	OUT	(ATROUT),A	;OUTPUT LSB OF SERIAL DATA TO CONSOLE
	RRA
	LD	(TXTMP1),A	;SHIFT RIGHT TO PREPARE FOR NEXT BIT
	LD	A,LOW TXDAT1
	LD	(CTCVEC+2),A	;DINK WITH VECTOR FOR NEXT TIME
	POP	AF
	EI
	RETI			;EXECUTION TIME = 94 CYCLES
;
;
TXDAT1:
	PUSH	AF
	LD	A,NULL
TXTMP1	EQU	$-1
	OUT	(ATROUT),A
	RRA
	LD	(TXTMP2),A
	LD	A,LOW TXDAT2
	LD	(CTCVEC+2),A
	POP	AF
	EI
	RETI
;
;
TXDAT2:
	PUSH	AF
	LD	A,NULL
TXTMP2	EQU	$-1
	OUT	(ATROUT),A
	RRA
	LD	(TXTMP3),A
	LD	A,LOW TXDAT3
	LD	(CTCVEC+2),A
	POP	AF
	EI
	RETI
;
;
TXDAT3:
	PUSH	AF
	LD	A,NULL
TXTMP3	EQU	$-1
	OUT	(ATROUT),A
	RRA
	LD	(TXTMP4),A
	LD	A,LOW TXDAT4
	LD	(CTCVEC+2),A
	POP	AF
	EI
	RETI
;
;
TXDAT4:
	PUSH	AF
	LD	A,NULL
TXTMP4	EQU	$-1
	OUT	(ATROUT),A
	RRA
	LD	(TXTMP5),A
	LD	A,LOW TXDAT5
	LD	(CTCVEC+2),A
	POP	AF
	EI
	RETI
;
;
TXDAT5:
	PUSH	AF
	LD	A,NULL
TXTMP5	EQU	$-1
	OUT	(ATROUT),A
	RRA
	LD	(TXTMP6),A
	LD	A,LOW TXDAT6
	LD	(CTCVEC+2),A
	POP	AF
	EI
	RETI
;
;
TXDAT6:
	PUSH	AF
	LD	A,NULL
TXTMP6	EQU	$-1
	OUT	(ATROUT),A
	RRA
	LD	(TXTMP7),A
	LD	A,LOW TXDAT7
	LD	(CTCVEC+2),A
	POP	AF
	EI
	RETI
;
;
;
TXDAT7:
	PUSH	AF
	LD	A,NULL
TXTMP7	EQU	$-1
	OUT	(ATROUT),A	;SEND LAST BIT WITHOUT SHIFTING AFTER
	LD	A,LOW TXSTOP
	LD	(CTCVEC+2),A	;SET VECTOR FOR STOP BIT NEXT TIME
	POP	AF
	EI
	RETI
;
;
;
TXSTOP:
	PUSH	AF
	LD	A,1
	OUT	(ATROUT),A
	LD	A,LOW TXEXIT
	LD	(CTCVEC+2),A	;SET VECTOR TO CLEAR TX BUSY FLAG
	POP	AF
	EI
	RETI
;
;
TXEXIT:
	PUSH	AF
	LD	A,00000001B
	OUT	(CTC1),A	;DISABLE INTERRUPT FROM XMIT BAUDRATE
	LD	A,255
	LD	(CTCVEC+2),A	;SET VECTOR SO BACKGROUND MONITOR IRQ
	POP	AF
RETI1:	EI
	RETI
;
;
	IF	(HIGH CONPAGE) NE (HIGH $)
	.ERROR /PAGE ERROR ON CONSOLE IO/
	ENDIF
;
;
;
;	*** END PAGE BOUNDARY RESTRICTIONS ***
;
;
;
CONINIT:
	DI
	LD	HL,TXEXIT
	LD	(CTCVEC+2),HL
	LD	A,00000111B
	OUT	(CTC1),A	;PROGRAM TX CTC IN TIMER MODE
	LD	A,(RXBAUD)
	OUT	(CTC1),A	;DIVIDE BY 26 GIVES 9600 BAUD

	LD	HL,KEYBUF
	LD	(RXINP),HL	;RESET RX FIFO IN/OUT POINTERS
	LD	(RXOUT),HL
CINIT2:
	DI			;ALTERNATE ENTRY FROM 'DISKIO'
	LD	A,1
	OUT	(CDMUX),A	;SET MUX TO ENABLE DATA TO CTC0
CINIT3:	LD	B,126
CINIT4:	IN	A,(ATARI)
	RLA
	JR	NC,CINIT3		;RE-LOAD COUNT IN B IF INPUT LOW
	DJNZ	CINIT4		;ELSE LOOP FOR ONE 9600 BAUD CHAR TIME

	LD	A, CTC_D7_INT_EN + CTC_D6_MODE_CNT + CTC_D2_TCNEXT + CTC_D1_SW_RST + CTC_D0_CONTROL
	OUT	(CTC0),A		;PROGRAM RX CTC IN COUNTER MODE
	LD	A,1				;SET TIME CONSTANT TO 1 - 6.5us
	OUT	(CTC0),A		;PROGRAM THE TIME CONSTANT AND INTERRUPT ON NEXT START BIT
	LD	HL,RXSTART
	LD	(CTCVEC),HL
	EI
	RET
;
;
RXOUT:	DEFW	KEYBUF		;KEYBOARD BUFFER OUTPUT POINTER
;
;
CONST:
	LD	HL,RXOUT
	LD	A,(RXINP)
	SUB	(HL)
	RET	Z		;A=0 IF NO DATA AVAILABLE

	LD	A,255
	RET
;
;
;
CONIN:
	CALL	CONST
	JR	Z,CONIN

	LD	HL,(RXOUT)
	LD	A,(HL)		;GET RECEIVED DATA FROM FIFO
	INC	L
	RES	4,L		;INCREMENT HL MODULO 16
	LD	(RXOUT),HL
	RET
;
;
;
CONOUT:
	LD	A,(CTCVEC+2)
	CP	LOW TXEXIT
	JR	C,CONOUT	;LOOP TILL WE REACH 'TEXIT' OR HIGHER

	LD	A,C
	AND	01111111B	;CLEAR BIT 7 AND SET FLAGS
	JP	PO,COUT2
	OR	10000000B
COUT2:	LD	(TXTMP0),A	;STORE RESULTING CHARACTER FOR XMIT
	LD	A,LOW TXSTART
	LD	(CTCVEC+2),A	;SET VECTOR FOR START BIT INTERRUPT
	LD	A,10000001B
	OUT	(CTC1),A	;PROGRAM TX CTC IN TIMER MODE
	RET
;
;
;
