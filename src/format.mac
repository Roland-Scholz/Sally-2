	;PAGE
;****************************************************************
;*								*
;*								*
;****************************************************************
;
;	... DISKETTE INITIALIZATION ROUTINE ...
;
;	'IOBUFF' UTILIZATION IN FORMAT FUNCTION:
;
;	|---------------|  IOBUFF
;	|		|
;	| BAD SEC NUMS	|	STARTS @ LEN-(128+1) OR LEN-(256+1)
;	|		|
;	|---------------|  +LEN
;	|		|
;	|  WRTTRK CODE  |	VARIABLE LENGTH HALT/NMI/OUTI ROUTINE
;	|		|
;	|---------------|  +N
;	|		|
;	|  TRACK IMAGE  |	POINTED TO BY 'TRKPTR'
;	|		|
;	|		|  +10200
;
;
;
FORMAT:
	XOR	A
	OUT	(INDXSET),A	;SET FLIPFLOP FOR NORMAL INDEX PULSES
	INC	A
	OUT	(INDXCLR),A
	LD	A,RSTCMD+HLOAD+STEPRATE
	CALL	TYP1CMD		;ISSUE SLOW RESTORE COMMAND
	XOR	00000100B	;FLIP TK0 STATUS BIT
	AND	10000100B
	JP	NZ,FORMX	;EXIT IF TRACK ZERO NOT INDICATED

	LD	HL,IOBUFF+LEN	;PREP TO BUILD IN-LINE CODE FOR FORMAT
	LD	A,(TRKSIZ+1)
	INC	A
	LD	B,A		;LOAD B WITH # OF PAGES/TRACK PLUS ONE
FORM2:	LD	(HL),076H	;STORE 'HALT' OPCODE
	INC	HL
	LD	(HL),0EDH	;STORE 'OUTI' OPCODE BYTE #1
	INC	HL
	LD	(HL),0A3H	;STORE 'OUTI' OPCODE BYTE #2
	INC	HL
	LD	(HL),020H	;STORE 'JRNZ' OPCODE BYTE
	INC	HL
	LD	(HL),-5		;STORE JUMP OFFSET FOR LOOP
	INC	HL
	DJNZ	FORM2
	LD	A,0C9H
	LD	(HL),A		;STORE 'RET' OPCODE AT END
	LD	(0066H),A	;ALSO PLUNK ONE DOWN AT NMI VECTOR
	INC	HL
	LD	(TRKPTR),HL	;SAVE ADDRESS TO BEGIN TRACK IMAGE

	XOR	A
FORM3:	LD	(TRACK),A	;A HOLDS NEXT TRACK NUMBER
	OR	A
	JR	Z,FORM3A	;SKIP STEP-IN IF ON TRACK ZERO
	LD	A,STEPIN+HLOAD+STEPRATE
	CALL	TYP1CMD		;STEP TO NEXT TRACK
FORM3A:	LD	IX,(FRMPTR)	;GET SELECTED FORMAT DATA POINTER
	LD	IY,(SKWPTR)	;GET SELECTED SKEW TABLE POINTER
	ld	a,(sides)
	rra
	ld	a,(outcpy)
	jr	nc,form3b	;jump if not formatting both sides
	xor	00100000b
	ld	(outcpy),a	;else flip side select bit in latch
	out	(latch),a
form3b:	call	build
	LD	A,(TRACK)
	OUT	(TRKREG),A
	LD	HL,(TRKPTR)	;POINT TO START OF TRACK IMAGE
	DI
	LD	A,WRTKDLY	;write track + 30ms settle delay
	CALL	CMDOUT		;ISSUE WRITE TRACK COMMAND
	LD	A,(TRKSIZ)
	LD	B,A		;LOAD B WITH TRACK SIZE MOD 256
	LD	C,DATREG
	CALL	IOBUFF+LEN	;EXECUTE WRITE TRACK FROM BUFFER
	EI
FORM4:	IN	A,(STSREG)
	BIT	0,A
	JR	NZ,FORM4
	LD	DE,(SEQNUM)	;LOAD DE WITH SEQUENCE NUMBER
	LD	HL,(SEQPTR)	; AND HL WITH CACA TABLE POINTER
	LD	A,(NSECTS)
	LD	B,A
	LD	IX,(SKWPTR)	;POINT TO SECTOR TABLE
FORM5:	LD	A,(IX)
	INC	IX
	OUT	(SECREG),A
	LD	A,(OUTCPY)
	AND	00100000b
	LD	A,RDCMD		;determine if reading side 0 or 1
	JR	Z,FORM51
	SET	1,A		;WD1772 no side-no in cmd (I leave it there, doesn't seem to matter)
FORM51:	CALL	TYP2CMD		;read sector discarding the data
	AND	10011000B	;TEST FOR READY/RNF/CRC ERROR INDICATION
	JR	Z,FORM6		;JUMP IF SECTOR READ OK

	AND	10000000B
	JR	NZ,FORMX	;QUIT TRYING IF NOT-READY ERROR
	PUSH	HL
	PUSH	BC
	LD	BC,IOBUFF+LEN-3
	OR	A
	SBC	HL,BC		;TEST IF CA-CA SECTOR LIST IS FULL
	POP	BC
	POP	HL
	JR	NC,FORM6	;SKIP IF NO MORE ROOM
	LD	(HL),E
	INC	HL
	LD	(HL),D
	INC	HL		;STORE BAD SECTOR NUMBER
FORM6:	INC	DE
	DJNZ	FORM5
	LD	(SEQNUM),DE	;STORE UPDATED ERROR TRACE STUFF
	LD	(SEQPTR),HL
	ld	a,(outcpy)
	and	00100000b
	jp	nz,form3a	;go back and do side 0 if on side 1 now
	LD	A,(TRACK)
	INC	A
	ld	hl,tracks
	CP	(HL)
	JP	C,FORM3		;FORMAT UP TO LAST TRACK ON DISK

	LD	HL,(SEQPTR)
	LD	(HL),255	;STORE TERMINATOR ON CA-CA BUFFER
	INC	HL
	LD	(HL),255
	XOR	A		;INDICATE FORMAT COMPLETED
FORMX:	PUSH	AF
	LD	A,255
	LD	(TRACK),A
	OUT	(TRKREG),A	;FORCE DISK HANDLER TO RECALIBRATE
	POP	AF
	RET			;RETURN COMPLETION STATUS IN A
;
;
;
;
;	... SUBROUTINE TO BUILD IMAGE OF FORMATTED TRACK ...
;
;	PARAMETERS ARE:  IX ....... (POINTER TO FORMAT PARAMETERS)
;			 IY ....... (TABLE OF SECTOR NUMBERS)
;			 TRKPTR ... (POINTER TO TRACK DATA BUFFER)
;			 TRACK .... (TRACK NUMBER)
;			 NSECTS ... (NUMBER OF SECTORS)
;			 sides .... (copy of 'nsides' param)
;
BUILD:
	LD	A,(NSECTS)
	LD	C,A
	PUSH	IX
	POP	HL
	LD	B,(HL)		;LOAD B WITH # OF FIELDS IN PREAMBLE
	INC	HL
	LD	DE,(TRKPTR)
BUILD1:	CALL	INSERT		;INSERT FIELDS OF PREAMBLE
	DJNZ	BUILD1

	LD	B,(HL)		;LOAD B WITH NUMBER OF ITEMS IN SECTOR
	INC	HL
	PUSH	HL
	POP	IX		;IX POINTS TO START OF SECTOR POOP
BUILD3:	LD	A,(TRACK)
	LD	(IX+7),A	;STORE TRACK# FOR TRACK BEING FORMATTED
	ld	a,(outcpy)
	and	00100000b
	ld	a,0
	jr	z,bild31	;jump if formatting side 0
	inc	a
bild31:	ld	(ix+9),a	;store side# in id
	LD	A,(IY)
	INC	IY
	LD	(IX+11),A	;STORE SECTOR# INTO FORMAT CONSTANTS

	PUSH	IX
	POP	HL		;POINT HL TO SECTOR POOP
	PUSH	BC
BUILD4:	CALL	INSERT
	DJNZ	BUILD4		;INSERT ITEMS UP TO SECTOR DATA FIELD

	LD	A,(IX+13)
	call	getsize		;compute sector size in bytes
build6:	ld	a,0ffh
	ld	(de),a		;fill sector data with ff's
	INC	DE
	DEC	BC		;REPEAT TILL SECTOR IMAGE IS FILLED
	LD	A,B
	OR	C
	JR	NZ,BUILD6

	LD	B,(HL)		;GET #FIELDS IN POST-SECTOR STUFF
	INC	HL
BUILD7:	CALL	INSERT		;INSERT FIELDS UP TO GAP 3
	DJNZ	BUILD7
	POP	BC

	DEC	C
	JR	NZ,BUILD3

	LD	HL,(TRKPTR)
	LD	BC,10200
	ADD	HL,BC		;COMPUTE END OF LONGEST TRACK IMAGE
	SBC	HL,DE		;COMPUTE BYTES NECESSARY TO GET THERE
	LD	B,H
	LD	C,L
	LD	H,D
	LD	L,E
	INC	DE
	LD	(HL),A
	LDIR			;FILL REST OF BUFFER
	RET
;
;
;
INSERT:	PUSH	BC
	LD	B,(HL)
	INC	HL
	LD	A,(HL)
	INC	HL
INS2:	LD	(DE),A
	INC	DE
	DJNZ	INS2
	POP	BC
	RET
;
;
;
;
;	... DISK FORMAT DATA TABLES FOR 5/8 DD/SD STANDARDS ...
;
;
SD5N18:	DEFB	1
	DEFB	16,0FFH

	DEFB	11
	DEFB	3,00H		;GAP 3 (DONE AS 2 FIELDS TO MAKE
	DEFB	3,00H		; ID FIELD COME OUT IN RIGHT LOCATION)
	DEFB	1,0FEH		;ID ADDRESS MARK
	DEFB	1,00H		;TRACK
	DEFB	1,00H		;SIDE
	DEFB	1,00H		;SECTOR
	DEFB	1,00H		;LENGTH
	DEFB	1,0F7H		;GENERATE CRC
	DEFB	11,0FFH		;GAP2
	DEFB	6,00H		;GAP2
	DEFB	1,0FBH		;DATA ADDRESS MARK

	DEFB	2
	DEFB	1,0F7H		;GENERATE CRC BYTES
	DEFB	9,0FFH		;GAP 3
;
;
;
;
;
DD5N18:	DEFB	1
	DEFB	32,4EH		;GAP 1

	DEFB	12
	DEFB	12,00H		;SECOND PART OF GAP 3
	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
	DEFB	1,0FEH		;GENERATE ID ADDRESS MARK
	DEFB	1,0		;TRACK#
	DEFB	1,00000000B	;SIDE
	DEFB	1,0		;SECTOR#
	DEFB	1,00000001B	;LENGTH
	DEFB	1,0F7H		;GENERATE CRC
	DEFB	22,4EH		;FIRST PART OF GAP 2
	DEFB	12,00H		;SECOND PART OF GAP 2
	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
	DEFB	1,0FBH		;GENERATE DATA ADDRESS MARK

	DEFB	2
	DEFB	1,0F7H		;GENERATE CRC BYTES
	DEFB	16,4EH		;FIRST PART OF GAP 3
;
;
;
SKEWSD:	DEFB	18,16,14,12,10,8,6,4,2
	DEFB	17,15,13,11,9,7,5,3,1
;
SKEWDD:	DEFB	1,7,13
	DEFB	6,12,18
	DEFB	5,11,17
	DEFB	4,10,16
	DEFB	3,9,15
	DEFB	2,8,14
;
;
;
SD8N26:	DEFB	4		;PREAMBLE FIELD
	DEFB	40,0FFH		;GAP 4
	DEFB	6,00
	DEFB	1,0FCH		;INDEX ADDRESS MARK
	DEFB	26,0FFH

	DEFB	11
	DEFB	3,00H		;GAP 3 (DONE AS 2 FIELDS)
	DEFB	3,00H		;
	DEFB	1,0FEH		;ID ADDRESS MARK
	DEFB	1,00H		;TRACK
	DEFB	1,00H		;SIDE
	DEFB	1,00H		;SECTOR
	DEFB	1,00H		;LENGTH
	DEFB	1,0F7H		;GENERATE CRC
	DEFB	11,0FFH		;GAP2
	DEFB	6,00H		;GAP2
	DEFB	1,0FBH		;DATA ADDRESS MARK

	DEFB	2
	DEFB	1,0F7H		;GENERATE CRC BYTES
	DEFB	27,0FFH		;GAP 3
;
;
;
DD8N26:	DEFB	5
	DEFB	80,4EH		;POST-INDEX GAP
	DEFB	12,00H		;INDEX SYNC
	DEFB	3,0F6H		;GENERATE SYNC=C1 HEX
	DEFB	1,0FCH		;GENERATE INDEX ADDRESS MARK
	DEFB	50,4EH		;GAP 1

	DEFB	12
	DEFB	12,00H		;SECOND PART OF GAP 3
	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
	DEFB	1,0FEH		;GENERATE ID ADDRESS MARK
	DEFB	1,0		;TRACK#
	DEFB	1,00000000B	;SIDE
	DEFB	1,0		;SECTOR#
	DEFB	1,00000001B	;LENGTH
	DEFB	1,0F7H		;GENERATE CRC
	DEFB	22,4EH		;FIRST PART OF GAP 2
	DEFB	12,00H		;SECOND PART OF GAP 2
	DEFB	3,0F5H		;GENERATE SYNC=A1 HEX
	DEFB	1,0FBH		;GENERATE DATA ADDRESS MARK

	DEFB	2
	DEFB	1,0F7H		;GENERATE CRC BYTES
	DEFB	53,4EH		;FIRST PART OF GAP 3
;
;
;
SKEW13:	DEFB	1,14,3,16,5,18,7,20,9,22,11,24,13,26
	DEFB	2,15,4,17,6,19,8,21,10,23,12,25
;
;
SKEW17:	DEFB	1,18,9,26,17,8,25,16,7,24,15,6,23
	DEFB	14,5,22,13,4,21,12,3,20,11,2,19,10
;
;
