;********************************************************
;*							*
;*	19200 BAUD SERIAL I/O FOR ATARI COMM PORT	*
;*							*
;********************************************************
;
;
;	19200 BAUD SERIAL I/O IS HALF DUPLEX DUE TO OBVIOUS
;	TIMING CONSTRAINTS. ALL TRANSFERS ARE DONE FROM 4K PAGE
;	ALIGNED BUFFER 'IOBUFF', WITH BLOCK START ADDRESS
;	ARRANGED SO END-OF-BLOCK CONDITION IS MET WHEN POINTER
;	ROLLS OVER THE NEXT EVEN PAGE BYTE BOUNDARY.
;
;	CALL WITH BLOCK START POINTER IN HL ,DATA POLARITY MASK
;	IN D (WHERE D=0 TRUE DATA, D=FF INVERTED DATA) AND
;	'C' OR 'E' HANDSHAKE CHARACTER IN E.
;
;
SENDBUFF:
	PUSH	HL		;SAVE DATA BLOCK POINTER
	PUSH	DE		;SAVE POLARITY MASK FOR DATA
	LD	HL,IOBUFF+LEN+1
	LD	(HL),E
	LD	D,0
	CALL	XMITBUF		;SEND 'C' OR 'E' CHARACTER FROM E
	POP	DE
	POP	HL
	LD	E,0
	CALL	XMITBUF		;THEN SEND DATA BLOCK TO ATARI
	LD	HL,IOBUFF+LEN+1
	LD	(HL),E		;FALL THROUGH TO SEND CHECKSUM
	LD	D,0
;
;	CALL WITH DATA BLOCK POINTER IN HL.
;	PRESERVES MASK/CKECKSUM IN D/E.
;
XMITBUF:
	DI
	LD	BC,STARBIT
SalyXMITBUF:
	LD	(CTCVEC+2),BC	;SET UP INITIAL INTERRUPT VECTOR
	LD	B,8
	LD	A, CTC_D7_INT_EN + CTC_D6_MODE_TIM + CTC_D2_TCNEXT + CTC_D1_SW_RST + CTC_D0_CONTROL
	OUT	(CTC1),A		;PROGRAM CTC1 TO INTERRUPT AT BIT RATE
	LD	A,13			;SET TIME CONSTANT TO 13 - 52us. EXACT IS 52.083us
	OUT	(CTC1),A		;COUNT 13*(16*250 NS) GIVES 19200 BAUD WITH 0.16% ERROR
	EI
	JR	$		;SPIN HERE TILL INTERRUPTS GET US OUT
;
;
;
;
;
;
;	... INTERRUPT FOR COMMAND INPUT HIGH->LOW TRANSITION ..
;
CSTART:
	EX	AF,AF'
	EXX
	LD	A,255
	LD	(CMDFLG),A	;SET 'CMDFLG' FLAG TO ERROR STATE FIRST
	OUT	(CDMUX),A	;SWITCH MUX TO ENABLE SERIAL DATA IRQ
	LD	HL,IOBUFF+LEN-5	;POINT DE 5 BYTES BEFORE END OF BUFFER
	CALL	RXBLOCK		;ATTEMPT TO RECEIVE COMMAND FRAME
	JR	NC,CSTRT1	;JUMP IF NO DATA HAPPENED

	DEC	HL
	LD	A,(HL)
	CP	C		;COMPARE DERRIVED AND RECVD CHECKSUMS
	JR	NZ,CSTRT1	;JUMP IF CHECKSUM ERROR

	LD	A,1
	LD	(CMDFLG),A	;SET FLAG IF GOOD COMMAND FRAME
CSTRT1:	EX	AF,AF'
	EXX
	EI
	RETI
;
;
;
;	... DATA FRAME RECEIVE SUBROUTINE ...
;
RECVBUFF:
	DI
	LD	HL,IOBUFF
	CALL	RXBLOCK		;BITBANG A BLOCK OF INPUT DATA
	EI
	JR	C,RBUFF2	;JUMP IF BUFFER OVERFLOWED

	DEC	HL
	LD	A,(HL)
	CP	C
	JR	NZ,RBUFF2	;JUMP IF CHECKSUMS DON'T AGREE

	LD	DE,IOBUFF
	OR	A
	SBC	HL,DE		;ELSE COMPUTE LENGTH OF BLOCK LESS
	XOR	A		; CHECKSUM BYTE AND RETURN WITH
	RET			; RESULT IN HL AND ZERO FLAG SET
;
RBUFF2:	LD	A,'N'
	CALL	SENDCHAR	;SEND 'NAK' FOR BAD DATA FRAME
	LD	A,255
	OR	A
	RET			;RETURN WITH ACC SET NON=ZERO
;
;
;
;
;
;	... BITBANG INPUT SUBROUTINE ...
;
;	CALL WITH BLOCK START POINTER IN HL. RETURNS WITH
;	HL POINTING TO LAST BYTE+1 OF BLOCK RECEIVED.
;	THE CARRY BIT IS SET IF THE BUFFER FILLED UP BEFORE
;	THE BIT STREAM STOPPED.
;
;
RXBLOCK:
	LD	DE,2730		;SET ABORT COUNTER FOR 32 MILLISECONDS
SalyRXBLOCK:
	LD	BC,0		;CLEAR B/C FOR CHECKSUM DERRIVATION
	JR	RXB35		;GO START LOOPING FOR START BIT
;
RXB1:	LD	A,C
	ADD	A,B
	ADC	A,0		;ACCUMULATE CHECKSUM ATARI STYLE
	LD	C,A
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	LD	B,8
;
;	SERIAL->PARALLEL CONVERSION AT 52 MICROSECONDS PER BIT
;
RXB2:	LD	A,11		;  7 CYCLES
	LD	A,11		;  7 CYCLES
	NOP			;  4 CYCLES
RXB3:	DEC	A		; 44 CYCLES  (11*4)
	JP	NZ,RXB3		;110 CYCLES  (11*10)
	IN	A,(ATARI)	; 11 CYCLES
	RLA			;  4 CYCLES
	RR	D		;  8 CYCLES
	DJNZ	RXB2		; 13 CYCLES  (8 ON FINAL BIT)

	LD	B,D		;SAVE COPY OF LAST DATA BYTE IN B
	LD	(HL),D		;THEN STORE IN MEMORY BUFFER @HL
	INC	HL
	LD	A,H
	CP	HIGH (IOBUFF+LEN)
	CCF
	RET	C		;RETURN WITH CARRY SET IF BUFFER FILLED

RXB35:
IF SALLYBUILD
	LD	DE,417		;5 MILLISECONDS @ 12 MICROSECONDS/LOOP
ENDIF
	LD	A, CTC_D6_MODE_CNT + CTC_D2_TCNEXT + CTC_D1_SW_RST + CTC_D0_CONTROL	; Set up values for CTC0
	OUT	(CTC0),A	;PUT CTC0 IN COUNTER MODE
	XOR	A			;TIME CONSTANT OF 0 WHICH MEANS 256
	OUT	(CTC0),A	;COUNT DATA HIGH->LOW EDGES MOD 256
IF SALLYBUILD <> 1
	LD	DE,417		;5 MILLISECONDS @ 12 MICROSECONDS/LOOP
ENDIF

RXB4:	IN	A,(CTC0)
	OR	A
	JR	NZ,RXB1		;NEW BYTE IS COMING IF START BIT LOW
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,RXB4		;ELSE LOOP TILL TIMER RUNS OUT

	RET			;RETURN WITH CARRY CLEAR IF TIMED OUT
;
;
;
;
;	**** PAGE BOUNDARY SENSITIVE CODE STARTS HERE ****
;
SERPAGE	EQU	$
;
;
;	... DAMN FAST TRANSMIT INTERRUPTS ...
;
;	HL ... POINTS TO DATA BLOCK TO BE SENT
;	 D ... HOLDS DATA POLARITY MASK
;	 E ... USED TO ACCUMULATE CHECKSUM
;	 B ... USED FOR DJNZ TO COUNT BITS
;	 C ... USED FOR PARALLEL-SERIAL OUTPUT
;
;
STARBIT:
	XOR	A
	OUT	(ATROUT),A	;SEND START BIT
	EI
	LD	A,(HL)		;LOAD A WITH TRANSMIT DATA BYTE
	INC	HL		; AND INCREMENT BUFFER POINTER
	XOR	D		;DO DATA POLARITY THING
	LD	C,A		;THEN STUFF IN C FOR SHIFTING OUT
	ADD	A,E
	ADC	A,0
	LD	E,A		;ACCUMULATE CHECKSUM IN E
	LD	A,LOW DATBIT
	LD	(CTCVEC+2),A	;FIX BAUDRATE INTERRUPT VECTOR
	RETI			;RETURN TO IDLE LOOP
;
;
;
DATBIT:
	LD	A,C
	OUT	(ATROUT),A	;SEND DATA BIT (LSB)
	EI
	RR	C		;SHIFT DATA FOR NEXT BIT
	DJNZ	DATB2		;DECREMENT AND SKIP IF NOT LAST BIT

	LD	A,LOW STOPB1
	LD	(CTCVEC+2),A	;THEN FIX VECTOR TO SEND STOP BIT
DATB2:	RETI			;RETURN TO IDLE LOOP
;
;
;
STOPB1:
	LD	A,1
	OUT	(ATROUT),A	;SEND STOP BIT
	EI
	LD	A,H
	CP	HIGH (IOBUFF+LEN)
	JR	NC,STOP1A	;JUMP IF BUFFER END REACHED

	LD	B,8		;LOAD BITCOUNT FOR NEXT RECEIVE BYTE
	LD	A,LOW STARBIT
	LD	(CTCVEC+2),A
	RETI			;SET TO SEND SECOND STOP BIT
;
STOP1A:	LD	A,LOW ENDBIT
	LD	(CTCVEC+2),A	;SET TO END TRANSMISSION
	RETI
;
;
;
	IF	(HIGH SERPAGE) NE (HIGH $)
	.ERROR /PAGE ERROR ON ATARI SIO/
	ENDIF
;
;
;
ENDBIT:
IF SALLYBUILD
	LD	A,CTC_D1_SW_RST + CTC_D0_CONTROL	;SOFTWARE RESET - STOP INTERRUPTS FROM BAUDRATE CTC
ELSE
	LD	A,CTC_D0_CONTROL	;STOP INTERRUPTS FROM BAUDRATE CTC BUT KEEP ON COUNTING TO CLOCK U26
ENDIF
	OUT	(CTC1),A			;SEND COMMAND TO CTC1
	EI
	LD	A,255
	LD	(CTCVEC+2),A	;SET VECTOR BACK TO STANDARD PLACE
	POP	HL		;DISCARD IRQ RETURN ADDRESS AND RETURN
	RETI			; TO SECOND ADDRESS ON STACK
;
;
;	**** END PAGE BOUNDARY RESTRICTIONS ****
;
;
